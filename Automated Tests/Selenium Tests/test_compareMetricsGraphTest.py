# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestCompareMetricsGraphTest():
	print("\nTestCompareMetricsGraphTest successfully passed")
	def setup_method(self, method):
		self.driver = webdriver.Chrome()
		self.vars = {}
  
	def teardown_method(self, method):
		self.driver.quit()
  
	def test_compareMetricsGraphTest(self):
		# Test name: CompareMetricsGraph Test
		# Step # | name | target | value
		# 1 | open | / | 
		self.driver.get("http://fitbit1.eastus.cloudapp.azure.com:8080/")
		# 2 | setWindowSize | 1552x880 | 
		self.driver.set_window_size(1552, 880)
		# 3 | click | css=.q-item:nth-child(1) > .q-item__section--main | 
		self.driver.find_element(By.CSS_SELECTOR, ".q-item:nth-child(1) > .q-item__section--main").click()
		# 4 | runScript | window.scrollTo(0,0) | 
		self.driver.execute_script("window.scrollTo(0,0)")
		# 5 | click | css=.q-tab--inactive .q-tab__label | 
		self.driver.find_element(By.CSS_SELECTOR, ".q-tab--inactive .q-tab__label").click()
		# 6 | click | id=fromfield | 
		self.driver.find_element(By.ID, "fromfield").click()
		# 7 | type | id=fromfield | 2020-02-19
		self.driver.find_element(By.ID, "fromfield").send_keys("2020-02-19")
		# 8 | click | id=tofield | 
		self.driver.find_element(By.ID, "tofield").click()
		# 9 | type | id=tofield | 2020-02-23
		self.driver.find_element(By.ID, "tofield").send_keys("2020-02-23")
		# 10 | click | css=div:nth-child(2) > .q-btn .q-btn__content > div | 
		self.driver.find_element(By.CSS_SELECTOR, "div:nth-child(2) > .q-btn .q-btn__content > div").click()
		# 11 | runScript | window.scrollTo(0,0) | 
		self.driver.execute_script("window.scrollTo(0,0)")
		# 12 | click | css=g:nth-child(3) > g > g > g > g:nth-child(3) > g > path | 
		self.driver.find_element(By.CSS_SELECTOR, "g:nth-child(3) > g > g > g > g:nth-child(3) > g > path").click()
		# 13 | click | css=svg > g | 
		self.driver.find_element(By.CSS_SELECTOR, "svg > g").click()
  
